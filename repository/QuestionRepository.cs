using JavaHateBE.model;

namespace JavaHateBE.repository{
    
    public class QuestionRepository {
        public List<Question> Questions { get; private set; } = [
        new("1 + 1", 2F),
        new("1 + 2", 3F),
        new("1 + 3", 4F),
        new("1 + 4", 5F),
        new("1 + 5", 6F),
        new("1 + 6", 7F),
        new("1 + 7", 8F),
        new("1 + 8", 9F),
        new("1 + 9", 10F),
        new("1 + 10", 11F),
        new("1 + 11", 12F),
        new("1 + 12", 13F),
        new("1 + 13", 14F),
        new("1 + 14", 15F),
        new("1 + 15", 16F),
        new("2 + 1", 3F),
        new("2 + 2", 4F),
        new("2 + 3", 5F),
        new("2 + 4", 6F),
        new("2 + 5", 7F),
        new("2 + 6", 8F),
        new("2 + 7", 9F),
        new("2 + 8", 10F),
        new("2 + 9", 11F),
        new("2 + 10", 12F),
        new("2 + 11", 13F),
        new("2 + 12", 14F),
        new("2 + 13", 15F),
        new("2 + 14", 16F),
        new("2 + 15", 17F),
        new("3 + 1", 4F),
        new("3 + 2", 5F),
        new("3 + 3", 6F),
        new("3 + 4", 7F),
        new("3 + 5", 8F),
        new("3 + 6", 9F),
        new("3 + 7", 10F),
        new("3 + 8", 11F),
        new("3 + 9", 12F),
        new("3 + 10", 13F),
        new("3 + 11", 14F),
        new("3 + 12", 15F),
        new("3 + 13", 16F),
        new("3 + 14", 17F),
        new("3 + 15", 18F),
        new("4 + 1", 5F),
        new("4 + 2", 6F),
        new("4 + 3", 7F),
        new("4 + 4", 8F),
        new("4 + 5", 9F),
        new("4 + 6", 10F),
        new("4 + 7", 11F),
        new("4 + 8", 12F),
        new("4 + 9", 13F),
        new("4 + 10", 14F),
        new("4 + 11", 15F),
        new("4 + 12", 16F),
        new("4 + 13", 17F),
        new("4 + 14", 18F),
        new("4 + 15", 19F),
        new("5 + 1", 6F),
        new("5 + 2", 7F),
        new("5 + 3", 8F),
        new("5 + 4", 9F),
        new("5 + 5", 10F),
        new("5 + 6", 11F),
        new("5 + 7", 12F),
        new("5 + 8", 13F),
        new("5 + 9", 14F),
        new("5 + 10", 15F),
        new("5 + 11", 16F),
        new("5 + 12", 17F),
        new("5 + 13", 18F),
        new("5 + 14", 19F),
        new("5 + 15", 20F),
        new("6 + 1", 7F),
        new("6 + 2", 8F),
        new("6 + 3", 9F),
        new("6 + 4", 10F),
        new("6 + 5", 11F),
        new("6 + 6", 12F),
        new("6 + 7", 13F),
        new("6 + 8", 14F),
        new("6 + 9", 15F),
        new("6 + 10", 16F),
        new("6 + 11", 17F),
        new("6 + 12", 18F),
        new("6 + 13", 19F),
        new("6 + 14", 20F),
        new("6 + 15", 21F),
        new("7 + 1", 8F),
        new("7 + 2", 9F),
        new("7 + 3", 10F),
        new("7 + 4", 11F),
        new("7 + 5", 12F),
        new("7 + 6", 13F),
        new("7 + 7", 14F),
        new("7 + 8", 15F),
        new("7 + 9", 16F),
        new("7 + 10", 17F),
        new("7 + 11", 18F),
        new("7 + 12", 19F),
        new("7 + 13", 20F),
        new("7 + 14", 21F),
        new("7 + 15", 22F),
        new("8 + 1", 9F),
        new("8 + 2", 10F),
        new("8 + 3", 11F),
        new("8 + 4", 12F),
        new("8 + 5", 13F),
        new("8 + 6", 14F),
        new("8 + 7", 15F),
        new("8 + 8", 16F),
        new("8 + 9", 17F),
        new("8 + 10", 18F),
        new("8 + 11", 19F),
        new("8 + 12", 20F),
        new("8 + 13", 21F),
        new("8 + 14", 22F),
        new("8 + 15", 23F),
        new("9 + 1", 10F),
        new("9 + 2", 11F),
        new("9 + 3", 12F),
        new("9 + 4", 13F),
        new("9 + 5", 14F),
        new("9 + 6", 15F),
        new("9 + 7", 16F),
        new("9 + 8", 17F),
        new("9 + 9", 18F),
        new("9 + 10", 19F),
        new("9 + 11", 20F),
        new("9 + 12", 21F),
        new("9 + 13", 22F),
        new("9 + 14", 23F),
        new("9 + 15", 24F),
        new("10 + 1", 11F),
        new("10 + 2", 12F),
        new("10 + 3", 13F),
        new("10 + 4", 14F),
        new("10 + 5", 15F),
        new("10 + 6", 16F),
        new("10 + 7", 17F),
        new("10 + 8", 18F),
        new("10 + 9", 19F),
        new("10 + 10", 20F),
        new("10 + 11", 21F),
        new("10 + 12", 22F),
        new("10 + 13", 23F),
        new("10 + 14", 24F),
        new("10 + 15", 25F),
        new("11 + 1", 12F),
        new("11 + 2", 13F),
        new("11 + 3", 14F),
        new("11 + 4", 15F),
        new("11 + 5", 16F),
        new("11 + 6", 17F),
        new("11 + 7", 18F),
        new("11 + 8", 19F),
        new("11 + 9", 20F),
        new("11 + 10", 21F),
        new("11 + 11", 22F),
        new("11 + 12", 23F),
        new("11 + 13", 24F),
        new("11 + 14", 25F),
        new("11 + 15", 26F),
        new("12 + 1", 13F),
        new("12 + 2", 14F),
        new("12 + 3", 15F),
        new("12 + 4", 16F),
        new("12 + 5", 17F),
        new("12 + 6", 18F),
        new("12 + 7", 19F),
        new("12 + 8", 20F),
        new("12 + 9", 21F),
        new("12 + 10", 22F),
        new("12 + 11", 23F),
        new("12 + 12", 24F),
        new("12 + 13", 25F),
        new("12 + 14", 26F),
        new("12 + 15", 27F),
        new("13 + 1", 14F),
        new("13 + 2", 15F),
        new("13 + 3", 16F),
        new("13 + 4", 17F),
        new("13 + 5", 18F),
        new("13 + 6", 19F),
        new("13 + 7", 20F),
        new("13 + 8", 21F),
        new("13 + 9", 22F),
        new("13 + 10", 23F),
        new("13 + 11", 24F),
        new("13 + 12", 25F),
        new("13 + 13", 26F),
        new("13 + 14", 27F),
        new("13 + 15", 28F),
        new("14 + 1", 15F),
        new("14 + 2", 16F),
        new("14 + 3", 17F),
        new("14 + 4", 18F),
        new("14 + 5", 19F),
        new("14 + 6", 20F),
        new("14 + 7", 21F),
        new("14 + 8", 22F),
        new("14 + 9", 23F),
        new("14 + 10", 24F),
        new("14 + 11", 25F),
        new("14 + 12", 26F),
        new("14 + 13", 27F),
        new("14 + 14", 28F),
        new("14 + 15", 29F),
        new("15 + 1", 16F),
        new("15 + 2", 17F),
        new("15 + 3", 18F),
        new("15 + 4", 19F),
        new("15 + 5", 20F),
        new("15 + 6", 21F),
        new("15 + 7", 22F),
        new("15 + 8", 23F),
        new("15 + 9", 24F),
        new("15 + 10", 25F),
        new("15 + 11", 26F),
        new("15 + 12", 27F),
        new("15 + 13", 28F),
        new("15 + 14", 29F),
        new("15 + 15", 30F)
        ];

        public async Task<Question?> GetQuestionById(Guid id)
        {
            return await Task.FromResult(Questions.Find(q => q.Id == id));
        }

        public async Task<IEnumerable<Question>> GetAllQuestions()
        {
            return await Task.FromResult(Questions);
        }

        public async Task<Question> AddQuestion(Question question)
        {
            Questions.Add(question);
            return await Task.FromResult(question);
        }

        public async Task<Question?> UpdateQuestion(Question question)
        {
            Question? currentQuestion = await GetQuestionById(question.Id);
            if (currentQuestion == null)
            {
                return await Task.FromResult(currentQuestion);
            }
            currentQuestion.UpdateText(question.Text);
            currentQuestion.UpdateAnswer(question.Answer);
            return await Task.FromResult(question);
        }

        public async Task<Question?> DeleteQuestion(Guid id)
        {
            Question? question = await GetQuestionById(id);
            if (question == null)
            {
                return await Task.FromResult(question);
            }
            Questions.Remove(question);
            return await Task.FromResult(question);
        }

        public async Task<Question?> GetQuestionFromText(string text)
        {
            return await Task.FromResult(Questions.Find(q => q.Text == text));
        }
    }
}